import nltk
from nltk.corpus import wordnet
from transformers import T5ForConditionalGeneration, T5Tokenizer


# Download WordNet if not already done
# nltk.download('wordnet')
# nltk.download('omw-1.4')


# Synonym generator function
def get_synonyms(word):
    synonyms = []
    for syn in wordnet.synsets(word):
        for lemma in syn.lemmas():
            synonyms.append(lemma.name())
    return set(synonyms)

# Load T5 model for sentence rephrasing
tokenizer = T5Tokenizer.from_pretrained('t5-small')
model = T5ForConditionalGeneration.from_pretrained('t5-small')

# Function to rephrase sentence using T5
def rephrase_sentence(sentence):
    input_text = f"paraphrase: {sentence} </s>"
    input_ids = tokenizer.encode(input_text, return_tensors="pt", truncation=True)
    
    outputs = model.generate(input_ids, max_length=100, num_return_sequences=1, num_beams=4, early_stopping=True)
    paraphrased_sentence = tokenizer.decode(outputs[0], skip_special_tokens=True)
    return paraphrased_sentence

